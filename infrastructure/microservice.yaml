---
AWSTemplateFormatVersion: "2010-09-09"
Description: This deploys the microservice definitions
Parameters:
  # Name for the VPC Cluster stach
  ClusterStackName:
    Description: Enter a name for the Created cluster stack.
    Type: String
    Default: MysfitsClusterStack

Resources:
  MythicalBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: BucketOwnerFullControl
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html

  MythicalMonolithGitRepository:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryDescription: Repository for the Mythical Mysfits monolith service
      RepositoryName: !Sub ${AWS::StackName}-monolith-service

  Mono:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: mythicalmysfits/service

  MythicalEcsCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub Cluster-${AWS::StackName}

  MythicalMonolithLogGroup:
    Type: AWS::Logs::LogGroup

  MythicalMonolithTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Cpu: 256
      ExecutionRoleArn:
        Fn::ImportValue: !Sub "${ClusterStackName}:EcsServiceRoleArn"
      Family: !Sub Mythical-Mysfits-Monolith-Service-${AWS::StackName}
      Memory: 512
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::ImportValue: !Sub "${ClusterStackName}:ECSTaskRole"
      ContainerDefinitions:
        - Name: MythicalMysfits-Service
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${Mono}:latest
          PortMappings:
            - ContainerPort: 8080
              Protocol: http
          Environment:
            - Name: UPSTREAM_URL
              Value: !GetAtt MythicalLoadBalancer.DNSName
            - Name: DDB_TABLE_NAME
              Value: !ImportValue DynamoTable
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref MythicalMonolithLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: awslogs-mythicalmysfits-service
          Essential: true

  MythicalLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub alb-${AWS::StackName}
      #Scheme: internet-facing
      Scheme: internal
      Type: network
      Subnets:
        - Fn::ImportValue: !Sub "${ClusterStackName}:PublicSubnetOne"
        - Fn::ImportValue: !Sub "${ClusterStackName}:PublicSubnetTwo"

  MythicalMysfitsTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: MythicalMysfits-TargetGroup
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthyThresholdCount: 3
      UnhealthyThresholdCount: 3
      Port: 8080
      Protocol: TCP
      VpcId:
        Fn::ImportValue: !Sub "${ClusterStackName}:VPCId"
      TargetType: ip

  MythicalListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref MythicalMysfitsTargetGroup
          Type: forward
      LoadBalancerArn: !Ref MythicalLoadBalancer
      Port: 80
      Protocol: TCP

  MythicalVpcLink:
    Type: AWS::ApiGateway::VpcLink
    Properties:
      Description: VPC Link for Mythical Misfits
      Name: MysfitsApiVpcLink
      TargetArns:
        - !Ref MythicalLoadBalancer
Outputs:
  Mono:
    Description: Docker container for Mono repository
    Value: !Ref Mono
    Export:
      Name: Mono
  MonoRepoUrl:
    Description: Mono report URL
    Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${Mono}:latest
    Export:
      Name: MonoRepoUrl
  MythicalMonolithTaskDefinition:
    Description: Mono Task Definition
    Value: !Ref MythicalMonolithTaskDefinition
    Export:
      Name: MythicalMonolithTaskDefinition
  MythicalEcsCluster:
    Description: Mythical cluster name
    Value: !Ref MythicalEcsCluster
    Export:
      Name: MythicalEcsCluster
  MythicalMysfitsTargetGroup:
    Description: Mythical monolith target group
    Value: !Ref MythicalMysfitsTargetGroup
    Export:
      Name: MythicalMysfitsTargetGroup
  MythicalLoadBalancer:
    Description: Load Balancer definition
    Value: !Ref MythicalLoadBalancer
    Export:
      Name: MythicalLoadBalancer
  MythicalLoadBalancerDNSName:
    Description: Load Balancer DNS Name
    Value: !GetAtt MythicalLoadBalancer.DNSName
    Export:
      Name: MythicalLoadBalancerDNSName
  MythicalVpcLink:
    Description: Mythical VPC Link
    Value: !Ref MythicalVpcLink
    Export:
      Name: MythicalVpcLink
  SiteBucket:
    Value: !Ref MythicalBucket
  S3WebsiteEndpoint:
    Value: !GetAtt MythicalBucket.WebsiteURL
